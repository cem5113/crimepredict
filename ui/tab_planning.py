# ui/tab_planning.py
import streamlit as st
import requests
from datetime import datetime
from zoneinfo import ZoneInfo


from ui.state import TimeMode
from config import settings


API_BASE = st.secrets.get("API_BASE", "http://localhost:8000")


st.header("ðŸš“ Devriye Planlama")


# --- Zaman Modu SeÃ§ici ---
mode = st.segmented_control("Zaman modu", [TimeMode.NOW.value, TimeMode.HOURLY.value, TimeMode.DAILY.value],
default=TimeMode.NOW.value, key="time_mode")


if mode == TimeMode.NOW.value:
offset = 0
elif mode == TimeMode.HOURLY.value:
offset = st.slider("Saatlik ufuk (saat)", 1, 24, 3, 1)
else:
offset = st.slider("GÃ¼nlÃ¼k ufuk (gÃ¼n)", 1, 3, 1, 1)


# Opsiyonel risk multiplier kontrolÃ¼
if st.toggle("Risk Ã§arpanÄ± aktif", value=settings.RISK_MULTIPLIER_ENABLED, key="rm_en"):
rm = st.slider("Risk Ã§arpanÄ±", 0.5, 2.0, float(settings.RISK_MULTIPLIER), 0.05)
else:
rm = settings.RISK_MULTIPLIER


# Parametre hash (basit):
param_key = f"{mode}:{offset}:{rm}"


# --- Ã–neri Al ---
if st.button("Devriye Ã–ner") or st.session_state.get("last_params") != param_key:
st.session_state["last_params"] = param_key
with st.spinner("Ã–neriler oluÅŸturuluyor..."):
resp = requests.get(f"{API_BASE}/patrol/predict", params={
"mode": mode,
"offset": offset,
"tz": settings.DEFAULT_TZ,
})
if resp.ok:
data = resp.json()
st.session_state["patrol_resp"] = data
else:
st.error(f"API hata: {resp.status_code}")


# --- GÃ¶sterim ---
resp = st.session_state.get("patrol_resp")
if resp:
tw = resp.get("time_window", {})
st.caption(f"Zaman penceresi: {tw.get('start','?')} â†’ {tw.get('end','?')}")


# Skor paneli
scores = resp.get("scores", {})
c1, c2, c3, c4 = st.columns(4)
c1.metric("Kapsama", f"{scores.get('coverage',0):.2f}")
c2.metric("Ã‡eÅŸitlilik", f"{scores.get('diversity',0):.2f}")
c3.metric("Ã–rtÃ¼ÅŸme", f"{scores.get('overlap',0):.2f}")
c4.metric("Toplam Skor", f"{scores.get('combined',0):.2f}")


# Karusel/kart arayÃ¼zÃ¼
recs = resp.get("recommendations", [])
if recs:
idx = st.slider("Ã–neri", 1, len(recs), 1)
rec = recs[idx-1]
st.subheader(f"Alternatif #{idx}")
st.write(f"Mesafe ~ {rec['distance_km']:.2f} km | SÃ¼re ~ {rec['duration_min']:.0f} dk")
with st.expander("Rota noktalarÄ±"):
st.json(rec["route"]) # Projede burada gerÃ§ek harita Ã§izimi kullanÄ±n
st.button("Amir OnayÄ± Ä°ste", key=f"approve_{rec['id']}")
